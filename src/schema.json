{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "OpenMPI Benchmark Configuration",
  "description": "Schema for configuring OpenMPI benchmark parameters",
  "type": "object",
  "required": ["benchmark_name", "test_suite", "global_config"],
  "properties": {
    "benchmark_name": {
      "type": "string",
      "description": "Name of the benchmark configuration"
    },
    "test_suite": {
      "type": "array",
      "description": "Collection of benchmark tests to run",
      "items": {
        "type": "object",
        "required": ["test_name", "test_type", "communication_pattern", "message_size"],
        "properties": {
          "test_name": {
            "type": "string",
            "description": "Identifier for the specific test"
          },
          "test_type": {
            "type": "string",
            "enum": ["latency", "bandwidth", "message_rate"],
            "description": "Type of measurement to perform"
          },
          "communication_pattern": {
            "type": "object",
            "required": ["type", "mode"],
            "properties": {
              "type": {
                "type": "string",
                "enum": ["p2p", "collective"],
                "description": "Point-to-point or collective communication"
              },
              "mode": {
                "type": "string",
                "enum": ["blocking", "non_blocking"],
                "description": "Blocking or non-blocking communication mode"
              },
              "collective_operation": {
                "type": "string",
                "enum": [
                  "broadcast", 
                  "scatter", "scatterv",
                  "gather", "gatherv",
                  "allgather", "allgatherv",
                  "alltoall", "alltoallv",
                  "reduce", "allreduce"
                ],
                "description": "Type of collective operation if applicable"
              },
              "vector_variant_config": {
                "type": "object",
                "description": "Configuration for vector variants (scatterv, gatherv, etc)",
                "properties": {
                  "distribution_pattern": {
                    "type": "string",
                    "enum": ["uniform", "random", "increasing", "decreasing", "custom"],
                    "description": "How data is distributed among processes"
                  },
                  "custom_counts": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "description": "Custom send/recv counts for each process"
                  },
                  "custom_displacements": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "description": "Custom displacements for each process"
                  },
                  "size_variation": {
                    "type": "object",
                    "properties": {
                      "min_factor": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 1,
                        "description": "Minimum size factor relative to base message size"
                      },
                      "max_factor": {
                        "type": "number",
                        "minimum": 1,
                        "description": "Maximum size factor relative to base message size"
                      }
                    }
                  }
                }
              }
            }
          },
          "message_size": {
            "type": "object",
            "required": ["min", "max", "increment_type"],
            "properties": {
              "min": {
                "type": "integer",
                "minimum": 0,
                "description": "Minimum message size in bytes"
              },
              "max": {
                "type": "integer",
                "minimum": 0,
                "description": "Maximum message size in bytes"
              },
              "increment_type": {
                "type": "string",
                "enum": ["power_of_two", "linear", "custom"],
                "description": "How message size increases during benchmark"
              },
              "custom_sizes": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "minimum": 0
                },
                "description": "Custom message sizes if increment_type is custom"
              }
            }
          }
        }
      }
    },
    "global_config": {
      "type": "object",
      "properties": {
        "max_runtime": {
          "type": "integer",
          "minimum": 0,
          "description": "Maximum runtime in seconds for each test"
        },
        "memory_limit": {
          "type": "integer",
          "minimum": 0,
          "description": "Memory limit in MB for each process"
        },
        "processes": {
          "type": "object",
          "properties": {
            "min": {
              "type": "integer",
              "minimum": 2,
              "description": "Minimum number of processes"
            },
            "max": {
              "type": "integer",
              "minimum": 2,
              "description": "Maximum number of processes"
            }
          }
        },
        "output": {
          "type": "object",
          "properties": {
            "format": {
              "type": "string",
              "enum": ["csv", "json", "text"],
              "default": "csv"
            },
            "directory": {
              "type": "string"
            },
            "verbose": {
              "type": "boolean",
              "default": false
            }
          }
        }
      }
    }
  }
}
